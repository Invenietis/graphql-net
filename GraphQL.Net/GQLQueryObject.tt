<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

using System;

namespace GraphQL.Net
{
	public interface IGQLQueryObject
	{
	}
	public class GQLQueryObject0 : IGQLQueryObject { }

	<# for( int i = 0; i<20; ++i )
	{
	#>
public class GQLQueryObject<#= i+1 #> : GQLQueryObject<#= i #>
	{
		public object Field<#= i+1 #> { get; set; }
	}
	<# } #>

	
    public static class GQLQueryObjectSelector
    {
		static public Type SelectGQLQueryObject( int count )
		{
			switch(count)
			{
				<# for( int i = 1; i<=20; ++i )
				{
				#>
case <#= i #> :return typeof( GQLQueryObject<#= i #> );
				<# } #>
default: throw new NotSupportedException();
			}
		}
    }
}